<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.campmoa.mappers.IBbsMapper">

    <!-- useGeneratedKeys : 생성된 기준키를 사용하겠냐 ?   -->
    <!--    keyColume : 기준키 이름-->
    <!--    keyProperty : 키의 값-->
    <insert id="insertArticle"
            useGeneratedKeys="true"
            keyColumn="index"
            keyProperty="index"
            parameterType="com.example.campmoa.entities.bbs.ArticleEntity">
        INSERT INTO `campmoa-bbs`.`articles` (`board_value`, `user_email`, `title`, `content`, `view`, `created_at`)
        VALUES (#{boardValue}, #{userEmail}, #{title}, #{content}, #{view}, default)
    </insert>

<!--    <insert id="insertArticleLike"-->
<!--    parameterType="com.example.campmoa.entities.bbs.ArticleLikeEntity">-->
<!--        INSERT INTO `campmoa-bbs`.`article_likes` (`user_email`, `article_index`, `created_at`)-->
<!--        VALUES ( #{userEmail}, #{articleIndex}, #{createdAt})-->
<!--    </insert>-->


    <select id="selectBoardIdByText"
            resultType="com.example.campmoa.entities.bbs.BoardEntity">
        SELECT `id`   AS `id`,
               `text` AS `text`
        FROM `campmoa-bbs`.`boards`
        ORDER BY `id`
    </select>

    <select id="selectBoardById"
            resultType="com.example.campmoa.entities.bbs.BoardEntity">
        SELECT `id`   AS `id`,
               `text` As `text`
        FROM `campmoa-bbs`.`boards`
        WHERE BINARY `id` = #{id}
        LIMIT 1;
    </select>

    <select id="selectArticles"
            resultType="com.example.campmoa.vos.bbs.ArticleVo">
        SELECT `articles`.`index`       AS `index`,
               `articles`.`board_value` AS `boardValue`,
               `articles`.`user_email`  AS `userEmail`,
               `articles`.`title`       AS `title`,
               `articles`.`content`     AS `content`,
               `articles`.`view`        AS `view`,
               `articles`.`created_at`  AS `createdAt`,
               `user`.`name`            AS `name`
        FROM `campmoa-bbs`.`articles`
                 LEFT JOIN `campmoa_member`.`users` AS `user` on `user`.email = `articles`.`user_email`
        ORDER BY `index` DESC
    </select>

    <select id="selectArticleByIndex"
            resultType="com.example.campmoa.vos.bbs.ArticleVo">
        SELECT `articles`.`index`                       AS `index`,
               `articles`.`board_value`                 AS `boardValue`,
               `articles`.`user_email`                  AS `userEmail`,
               `articles`.`title`                       AS `title`,
               `articles`.`content`                     AS `content`,
               `articles`.`view`                        AS `view`,
               `articles`.`created_at`                  AS `createdAt`,
               `user`.`name`                            AS `name`,
               COUNT(`aLikedCount`.`article_index`)     AS `articleLikedCount`,
               COUNT(`articleLike`.`article_index`) > 0 AS `articleLiked`
        FROM `campmoa-bbs`.`articles`
                 LEFT JOIN `campmoa_member`.`users` AS `user`
                           ON `user`.email = `articles`.`user_email`
                 LEFT JOIN `campmoa-bbs`.`article_likes` AS `aLikedCount`
                           ON `articles`.`index` = `aLikedCount`.`article_index`
                 LEFT JOIN `campmoa-bbs`.`article_likes` AS `articleLike`
                           ON `articles`.`index` = `articleLike`.`article_index`
        WHERE `articles`.`index` = #{index}
        GROUP BY `articles`.`index`
        LIMIT 1
    </select>


    <update id="updateArticle"
            parameterType="com.example.campmoa.entities.bbs.ArticleEntity">
        UPDATE `campmoa-bbs`.`articles`
        SET `board_value` = #{boardValue},
            `user_email`  = #{userEmail},
            `title`       = #{title},
            `content`     = #{content},
            `view`        = #{view},
            `created_at`  = #{createdAt}
        WHERE `index` = #{index}
        LIMIT 1
    </update>

<!--  좋아요 작업 구현부.  -->
    <select id="selectLikeInfo" parameterType="com.example.campmoa.entities.bbs.ArticleLikeEntity" resultType="_int">
        SELECT COUNT(*)
        FROM `campmoa-bbs`.`article_likes`
        WHERE `article_index` = #{aid}
    </select>



    <insert id="insertArticleLike">
        INSERT INTO `campmoa-bbs`.`article_likes` (`user_email`, `article_index`) VALUES ( #{userEmail}, #{index} )
    </insert>

    <delete id="deleteArticleLike">
        DELETE
        FROM `campmoa-bbs`.`article_likes`
        WHERE `user_email` = #{userEmail}
          AND `article_index` = #{index}
    </delete>


    <select id="selectArticleLike"
    resultType="com.example.campmoa.entities.bbs.ArticleLikeEntity">
        SELECT `user_email`    AS `userEmail`,
               `article_index` AS `articleIndex`,
               `created_at`    AS `createdAt`
        FROM `campmoa-bbs`.`article_likes`
        WHERE `article_index` = #{index}
    </select>

<!--    <insert id="insertLike" parameterType="com.example.campmoa.entities.bbs.ArticleLikeEntity">-->
<!--        insert into `campmoa-bbs`.`article_likes`-->
<!--            (user_email, article_index, created_at)-->
<!--        VALUES (#{userEmail}, #{aid}, default)-->

<!--    </insert>-->

<!--    <delete id="deleteLike" parameterType="com.example.campmoa.entities.bbs.ArticleLikeEntity">-->
<!--        delete-->
<!--        from `campmoa-bbs`.article_likes-->
<!--        where article_index = #{aid}-->
<!--    </delete>-->



</mapper>